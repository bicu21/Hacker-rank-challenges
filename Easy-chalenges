if __name__ == '__main__':
    print("Hello, World!")

# second question 
#!/bin/python3

import math
import os
import random
import re
import sys



if __name__ == '__main__':
    n = int(input().strip())
if n % 2 != 0:
    print('Weird')
elif  n % 2 == 0 and 2 <= n <= 5:
    print('Not Weird')
elif n % 2 == 0 and 6 <= n <= 20:
    print('Weird')
elif n % 2 == 0 and n > 20:
    print('Not Weird')

# third question
if __name__ == '__main__':
    a = int(input())
    b = int(input())
    print(a + b)
    print(a - b)
    print(a * b)
# fourth question
if __name__ == '__main__':
    a = int(input())
    b = int(input())
    print(a//b)
    print(a/b)`
    
# fifth question 
if __name__ == '__main__':
    n = int(input())
for i in range(n):
    print(i*i)
# sixth question

def is_leap(year):
    leap = False
    if year % 400 == 0:
        return True
    elif year % 100 == 0:
        return False
    elif year % 4 == 0:
        return True
    return leap
  


year = int(input())
print(is_leap(year))

# question number seven

    
def consecutive_numbers(n):
    for i in range(1, n+1):
        print(i, end="")
        
if __name__ == '__main__':
    n = int(input())
consecutive_numbers(n)

# Enter your code here. Read input from STDIN. Print output to STDOUT
# Array and list
# Creating Array and list.
# my_list = [1,2,3,4,5,6]
 #  Mixed list
 # [1,'Hello',True]
 # Accessing the list elements
 # print(my_list[0])
 # Simple loop 
numbers = [1,2,3]
for num in numbers:
    print(num)
# Nested loop
# This is when we put one loop inside another loop
a = [3,6]
b = [1,4]
for x in a :
    for y in b:
        # print(x,y)
        poduct = x * y
        print(product , end='')
        print()

#List Comprehension
x = 2
y = 3
z = 4
print(x + y + z)
#  Range and iteration.
# range(5) means 0 to 4
for i in range(5):
    print(i, end=" ")
# We can also control where it starts and end.
for i in range(2,10):
    print(i)
#  Nested loops
for i in range(2):
    for j in range(3):
        print(i,j)

# To go through x, y,z I need three loops
x = 1
y = 1
z = 1
for i in range(x + 1):
    for j in range(y+1):
        for k in range(z + 1):
            print(i, j, k)
# Tuples
#  A tuple is a list it uses parenthesis.
# It cannot be changed after created.
my_tuple = (1,2,34,5)
print(my_tuple[0])
# Filtering with conditions
x = 1
y = 1
z = 1
n = 2

points = []

for i in range(x + 1):
    for j in range(y + 1):
        for k in range(z + 1):
            if i + j + k != n:
                points.append((i, j, k))

print(points)
# if i + j + k != n: â€” this filters out unwanted combinations.
# Only valid coordinates are added to the points list
# List comprehensions
x = 1
y = 1
z = 1
n = 2

points = [(i, j, k) 
          for i in range(x + 1) 
          for j in range(y + 1) 
          for k in range(z + 1) 
          if i + j + k != n]

print(points)
# Another day solving problems 
#Lists
#A list is ordered collection of items.
#Contains elements of any data type.
# defined using square brackets.
scores = [2, 3, 6, 6, 5]
print("2 3 6 6 5".split())
# Removig duplicate values
unique_list = set(scores)
print(unique_list)
# Sorting data 
sorted_scores = sorted(unique_list,reverse=True)
print(sorted_scores)
# Accessing elements in a sorted list
runner_up = sorted_scores[1]
print(runner_up)

if __name__ == '__main__':
    n = int(input())
    arr = map(int, input().split())
    
    unique_arr = set(arr)
    sorted_arr = sorted(unique_arr,reverse=True)
    runner_up = sorted_arr[1]
    print(runner_up)
    




    



